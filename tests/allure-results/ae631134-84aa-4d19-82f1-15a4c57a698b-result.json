{"name": "Проверка позитивного сценария заказа самоката", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: Element <div class=\"Dropdown-control\"> is not clickable at point (720,261) because another element <div class=\"react-datepicker__current-month\"> obscures it\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:199:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:351:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:177:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:136:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:354:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:230:31", "trace": "self = <tests.test_order_scooter.TestOrderFlow object at 0x000001CE221E0550>\ndriver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"f2738acb-0a20-425f-b3fe-e80e0e6a4766\")>\norder_button = 'head'\ntest_data = {'address': 'пер. Солнечный, д. 5 к. 99', 'color': 'grey', 'comment': 'Радость тута оставить грудь кожа.', 'date': '09.04.2025', ...}\n\n    @allure.title(\"Проверка позитивного сценария заказа самоката\")\n    @allure.description(\"Тестирование полного флоу заказа с разными наборами данных\")\n    @pytest.mark.parametrize(\"order_button,test_data\", [\n        (\"head\", generate_order_data()),\n        (\"foot\", generate_order_data())\n    ], ids=[\"Head order button\", \"Foot order button\"])\n    def test_successful_order_flow(self, driver, order_button, test_data):\n        with allure.step(\"Открываем главную страницу\"):\n            main_page = MainPage(driver)\n            main_page.go_to_site()\n            main_page.accept_cookies()\n    \n        with allure.step(f\"Нажимаем кнопку 'Заказать' ({order_button})\"):\n            if order_button == \"head\":\n                main_page.click_head_order_button()\n            else:\n                main_page.click_foot_order_button()\n    \n        with allure.step(\"Заполняем первую часть формы заказа\"):\n            order_page = OrderPage(driver)\n            order_page.fill_first_step_form(\n                test_data['name'],\n                test_data['lastname'],\n                test_data['address'],\n                test_data['metro'],\n                test_data['phone']\n            )\n    \n        with allure.step(\"Заполняем вторую часть формы заказа\"):\n>           order_page.fill_second_step_form(\n                test_data['date'],\n                test_data['rental_period'],\n                test_data['color'],\n                test_data['comment']\n            )\n\ntest_order_scooter.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\order_page.py:22: in fill_second_step_form\n    self.click_element(OrderPageLocators.RENTAL_PERIOD)\n..\\pages\\base_page.py:21: in click_element\n    element.click()\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:119: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:572: in _execute\n    return self._parent.execute(command, params)\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001CE22267B60>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"Element <div class=\\\\\"Dropdown-cont...ment\":\"<div class=\\\\\"Dropdown-control\\\\\">\",\"overlayingElement\":\"<div class=\\\\\"react-datepicker__current-month\\\\\">\"}}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: Element <div class=\"Dropdown-control\"> is not clickable at point (720,261) because another element <div class=\"react-datepicker__current-month\"> obscures it\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:199:5\nE       ElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:351:5\nE       webdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:177:11\nE       interaction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:136:11\nE       clickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:354:29\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:230:31\n\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: ElementClickInterceptedException"}, "description": "Тестирование полного флоу заказа с разными наборами данных", "steps": [{"name": "Открываем главную страницу", "status": "passed", "start": 1743959067233, "stop": 1743959068661}, {"name": "Нажимаем кнопку 'Заказать' (head)", "status": "passed", "start": 1743959068661, "stop": 1743959068923}, {"name": "Заполняем первую часть формы заказа", "status": "passed", "start": 1743959068923, "stop": 1743959070273}, {"name": "Заполняем вторую часть формы заказа", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: Element <div class=\"Dropdown-control\"> is not clickable at point (720,261) because another element <div class=\"react-datepicker__current-month\"> obscures it\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:199:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:351:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:177:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:136:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:354:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:230:31\n\n", "trace": "  File \"C:\\Users\\windw\\PycharmProjects\\Sprint_6\\tests\\test_order_scooter.py\", line 40, in test_successful_order_flow\n    order_page.fill_second_step_form(\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^\n        test_data['date'],\n        ^^^^^^^^^^^^^^^^^^\n    ...<2 lines>...\n        test_data['comment']\n        ^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"C:\\Users\\windw\\PycharmProjects\\Sprint_6\\pages\\order_page.py\", line 22, in fill_second_step_form\n    self.click_element(OrderPageLocators.RENTAL_PERIOD)\n    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\windw\\PycharmProjects\\Sprint_6\\pages\\base_page.py\", line 21, in click_element\n    element.click()\n    ~~~~~~~~~~~~~^^\n  File \"C:\\Users\\windw\\PycharmProjects\\Sprint_6\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 119, in click\n    self._execute(Command.CLICK_ELEMENT)\n    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\windw\\PycharmProjects\\Sprint_6\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 572, in _execute\n    return self._parent.execute(command, params)\n           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\windw\\PycharmProjects\\Sprint_6\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\windw\\PycharmProjects\\Sprint_6\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1743959070273, "stop": 1743959070422}], "parameters": [{"name": "order_button", "value": "'head'"}, {"name": "test_data", "value": "{'name': 'Валерия', 'lastname': 'Попов', 'address': 'пер. Солнечный, д. 5 к. 99', 'metro': 'ВДНХ', 'phone': '+79804763483', 'date': '09.04.2025', 'rental_period': 'пятеро суток', 'color': 'grey', 'comment': 'Радость тута оставить грудь кожа.'}"}], "start": 1743959067233, "stop": 1743959070430, "uuid": "ae48268c-1e38-45fd-ba2f-db2ea5269376", "historyId": "1bd592789e3a540b31e42614875021a3", "testCaseId": "1e85d20b957fb5b46498ca86a691026e", "fullName": "tests.test_order_scooter.TestOrderFlow#test_successful_order_flow", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('driver')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_scooter"}, {"name": "subSuite", "value": "TestOrderFlow"}, {"name": "host", "value": "Gemini_78"}, {"name": "thread", "value": "15140-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_scooter"}]}