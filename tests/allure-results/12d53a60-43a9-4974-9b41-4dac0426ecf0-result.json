{"name": "Test successful order from different entry points", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:199:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:552:5\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16", "trace": "self = <tests.test_order_scooter.TestOrderFlow object at 0x00000291B76EC910>\ndriver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"aa7eb473-d9b8-4d31-9d06-53f0424a41ed\")>\nentry_point = 'foot'\n\n    @allure.title('Test successful order from different entry points')\n    @pytest.mark.parametrize('entry_point', ['head', 'foot'])\n    def test_successful_order_flow(self, driver, entry_point):\n        with allure.step('Generate test data'):\n            order_data = generate_order_data()\n            print(f\"\\nTest data: {order_data}\")  # Для отладки\n    \n        with allure.step('Open main page and accept cookies'):\n            main_page = MainPage(driver)\n            main_page.go_to_site()\n            main_page.accept_cookies()\n    \n        with allure.step(f'Start order from {entry_point} button'):\n            if entry_point == 'head':\n                main_page.click_head_order_button()\n            else:\n                main_page.scroll_to_footer()\n                main_page.click_foot_order_button()\n    \n        with allure.step('Fill first step of order form'):\n            order_page = OrderPage(driver)\n            order_page.fill_first_step_form(\n                order_data['name'],\n                order_data['lastname'],\n                order_data['address'],\n                order_data['metro'],\n                order_data['phone']\n            )\n    \n        with allure.step('Fill second step of order form'):\n            order_page.fill_second_step_form(\n                order_data['date'],\n                order_data['rental_period'],\n                order_data['color'],\n                order_data['comment']\n            )\n    \n        with allure.step('Confirm order'):\n>           order_page.confirm_order()\n\ntest_order_scooter.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\order_page.py:76: in confirm_order\n    confirm_button = WebDriverWait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"aa7eb473-d9b8-4d31-9d06-53f0424a41ed\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x00000291B7BBC680>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:199:5\nE       NoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:552:5\nE       dom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "steps": [{"name": "Generate test data", "status": "passed", "start": 1743963408797, "stop": 1743963408797}, {"name": "Open main page and accept cookies", "status": "passed", "start": 1743963408797, "stop": 1743963410187}, {"name": "Start order from foot button", "status": "passed", "start": 1743963410188, "stop": 1743963410467}, {"name": "Fill first step of order form", "status": "passed", "start": 1743963410467, "stop": 1743963411972}, {"name": "Fill second step of order form", "status": "passed", "start": 1743963411972, "stop": 1743963413806}, {"name": "Confirm order", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:199:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:552:5\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n", "trace": "  File \"C:\\Users\\windw\\PycharmProjects\\Sprint_6\\tests\\test_order_scooter.py\", line 50, in test_successful_order_flow\n    order_page.confirm_order()\n    ~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"C:\\Users\\windw\\PycharmProjects\\Sprint_6\\pages\\order_page.py\", line 76, in confirm_order\n    confirm_button = WebDriverWait(self.driver, 10).until(\n        EC.element_to_be_clickable(OrderPageLocators.CONFIRM_BUTTON)\n    )\n  File \"C:\\Users\\windw\\PycharmProjects\\Sprint_6\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 146, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1743963413806, "stop": 1743963424160}], "attachments": [{"name": "stdout", "source": "23acf054-bfaf-4132-9961-49447e00a30a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "entry_point", "value": "'foot'"}], "start": 1743963408796, "stop": 1743963424162, "uuid": "1b2489f5-f238-425c-894d-fb0adb9fb711", "historyId": "5d09b3fccd0edeb1dae7fe2804ee684e", "testCaseId": "1e85d20b957fb5b46498ca86a691026e", "fullName": "tests.test_order_scooter.TestOrderFlow#test_successful_order_flow", "labels": [{"name": "feature", "value": "Order Flow"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_scooter"}, {"name": "subSuite", "value": "TestOrderFlow"}, {"name": "host", "value": "Gemini_78"}, {"name": "thread", "value": "21452-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_scooter"}]}