{"name": "Test Scooter logo navigation", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchDriverException: Message: Unable to obtain driver for firefox; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location", "trace": "self = <selenium.webdriver.common.driver_finder.DriverFinder object at 0x000002A818401F90>\n\n    def _binary_paths(self) -> dict:\n        if self._paths[\"driver_path\"]:\n            return self._paths\n    \n        browser = self._options.capabilities[\"browserName\"]\n        try:\n            path = self._service.path\n            if path:\n                logger.debug(\n                    \"Skipping Selenium Manager; path to %s driver specified in Service class: %s\", browser, path\n                )\n                if not Path(path).is_file():\n>                   raise ValueError(f\"The path is not a valid file: {path}\")\nE                   ValueError: The path is not a valid file: geckodriver.exe\n\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:64: ValueError\n\nThe above exception was the direct cause of the following exception:\n\n    @pytest.fixture\n    def driver():\n        # Настройки Firefox\n        options = Options()\n        options.binary_location = r\"C:\\Program Files\\Mozilla Firefox\\firefox.exe\"\n    \n        # Для отладки (видимый режим):\n        # options.add_argument(\"--width=1920\")\n        # options.add_argument(\"--height=1080\")\n    \n        # Для CI (headless-режим):\n        options.add_argument(\"--headless\")\n    \n        # Указываем путь к geckodriver (если он не в PATH)\n        service = Service(executable_path='geckodriver.exe')  # Укажите правильный путь\n    \n        # Создаём драйвер\n>       driver = webdriver.Firefox(service=service, options=options)\n\nconftest.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\firefox\\webdriver.py:57: in __init__\n    if finder.get_browser_path():\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:47: in get_browser_path\n    return self._binary_paths()[\"browser_path\"]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.common.driver_finder.DriverFinder object at 0x000002A818401F90>\n\n    def _binary_paths(self) -> dict:\n        if self._paths[\"driver_path\"]:\n            return self._paths\n    \n        browser = self._options.capabilities[\"browserName\"]\n        try:\n            path = self._service.path\n            if path:\n                logger.debug(\n                    \"Skipping Selenium Manager; path to %s driver specified in Service class: %s\", browser, path\n                )\n                if not Path(path).is_file():\n                    raise ValueError(f\"The path is not a valid file: {path}\")\n                self._paths[\"driver_path\"] = path\n            else:\n                output = SeleniumManager().binary_paths(self._to_args())\n                if Path(output[\"driver_path\"]).is_file():\n                    self._paths[\"driver_path\"] = output[\"driver_path\"]\n                else:\n                    raise ValueError(f'The driver path is not a valid file: {output[\"driver_path\"]}')\n                if Path(output[\"browser_path\"]).is_file():\n                    self._paths[\"browser_path\"] = output[\"browser_path\"]\n                else:\n                    raise ValueError(f'The browser path is not a valid file: {output[\"browser_path\"]}')\n        except Exception as err:\n            msg = f\"Unable to obtain driver for {browser}\"\n>           raise NoSuchDriverException(msg) from err\nE           selenium.common.exceptions.NoSuchDriverException: Message: Unable to obtain driver for firefox; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location\n\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:78: NoSuchDriverException"}, "start": 1743961927836, "stop": 1743961927836, "uuid": "aec8554d-3896-43db-8c53-b9a92d5077ca", "historyId": "59271150f65fe3c1d53506ed588f95a6", "testCaseId": "59271150f65fe3c1d53506ed588f95a6", "fullName": "tests.test_order_scooter.TestLogoNavigation#test_scooter_logo_navigation", "labels": [{"name": "feature", "value": "Logo Navigation"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_scooter"}, {"name": "subSuite", "value": "TestLogoNavigation"}, {"name": "host", "value": "Gemini_78"}, {"name": "thread", "value": "18328-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_scooter"}]}